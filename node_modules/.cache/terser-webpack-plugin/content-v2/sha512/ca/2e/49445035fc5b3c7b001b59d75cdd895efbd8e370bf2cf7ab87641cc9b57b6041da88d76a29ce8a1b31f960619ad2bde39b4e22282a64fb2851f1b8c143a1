{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Gabriel\\\\Desktop\\\\projetos\\\\tozi_mobile(backup antes firebase)\\\\node_modules\\\\@ionic\\\\core\\\\dist\\\\esm\\\\legacy\\\\ion-action-sheet-controller_7.entry.js.pre-build-optimizer.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"d\",\"ActionSheetController\",\"AlertController\",\"LoadingController\",\"ModalController\",\"PickerController\",\"PopoverController\",\"ToastController\",\"tslib__WEBPACK_IMPORTED_MODULE_0__\",\"_chunk_f257aad1_js__WEBPACK_IMPORTED_MODULE_1__\",\"_chunk_24212d31_js__WEBPACK_IMPORTED_MODULE_3__\",\"hostRef\",\"Object\",\"this\",\"prototype\",\"create\",\"options\",\"dismiss\",\"data\",\"role\",\"id\",\"document\",\"getTop\",\"_a\"],\"mappings\":\"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\",\"sourcesContent\":[\"import * as tslib_1 from \\\"tslib\\\";\\nimport { r as registerInstance } from './chunk-f257aad1.js';\\nimport './chunk-1074393c.js';\\nimport { g as createOverlay, h as dismissOverlay, j as getOverlay } from './chunk-24212d31.js';\\nvar ActionSheetController = /** @class */ (function () {\\n    function ActionSheetController(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create an action sheet overlay with action sheet options.\\n     *\\n     * @param options The options to use to create the action sheet.\\n     */\\n    ActionSheetController.prototype.create = function (options) {\\n        return createOverlay('ion-action-sheet', options);\\n    };\\n    /**\\n     * Dismiss the open action sheet overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the action sheet.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the action sheet.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\\n     */\\n    ActionSheetController.prototype.dismiss = function (data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-action-sheet', id);\\n    };\\n    /**\\n     * Get the most recently opened action sheet overlay.\\n     */\\n    ActionSheetController.prototype.getTop = function () {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            return tslib_1.__generator(this, function (_a) {\\n                return [2 /*return*/, getOverlay(document, 'ion-action-sheet')];\\n            });\\n        });\\n    };\\n    return ActionSheetController;\\n}());\\nvar AlertController = /** @class */ (function () {\\n    function AlertController(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create an alert overlay with alert options.\\n     *\\n     * @param options The options to use to create the alert.\\n     */\\n    AlertController.prototype.create = function (options) {\\n        return createOverlay('ion-alert', options);\\n    };\\n    /**\\n     * Dismiss the open alert overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the alert.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the alert.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\\n     */\\n    AlertController.prototype.dismiss = function (data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-alert', id);\\n    };\\n    /**\\n     * Get the most recently opened alert overlay.\\n     */\\n    AlertController.prototype.getTop = function () {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            return tslib_1.__generator(this, function (_a) {\\n                return [2 /*return*/, getOverlay(document, 'ion-alert')];\\n            });\\n        });\\n    };\\n    return AlertController;\\n}());\\nvar LoadingController = /** @class */ (function () {\\n    function LoadingController(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a loading overlay with loading options.\\n     *\\n     * @param options The options to use to create the loading.\\n     */\\n    LoadingController.prototype.create = function (options) {\\n        return createOverlay('ion-loading', options);\\n    };\\n    /**\\n     * Dismiss the open loading overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the loading.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the loading.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\\n     */\\n    LoadingController.prototype.dismiss = function (data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-loading', id);\\n    };\\n    /**\\n     * Get the most recently opened loading overlay.\\n     */\\n    LoadingController.prototype.getTop = function () {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            return tslib_1.__generator(this, function (_a) {\\n                return [2 /*return*/, getOverlay(document, 'ion-loading')];\\n            });\\n        });\\n    };\\n    return LoadingController;\\n}());\\nvar ModalController = /** @class */ (function () {\\n    function ModalController(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a modal overlay with modal options.\\n     *\\n     * @param options The options to use to create the modal.\\n     */\\n    ModalController.prototype.create = function (options) {\\n        return createOverlay('ion-modal', options);\\n    };\\n    /**\\n     * Dismiss the open modal overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the modal.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the modal.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\\n     */\\n    ModalController.prototype.dismiss = function (data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-modal', id);\\n    };\\n    /**\\n     * Get the most recently opened modal overlay.\\n     */\\n    ModalController.prototype.getTop = function () {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            return tslib_1.__generator(this, function (_a) {\\n                return [2 /*return*/, getOverlay(document, 'ion-modal')];\\n            });\\n        });\\n    };\\n    return ModalController;\\n}());\\nvar PickerController = /** @class */ (function () {\\n    function PickerController(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a picker overlay with picker options.\\n     *\\n     * @param options The options to use to create the picker.\\n     */\\n    PickerController.prototype.create = function (options) {\\n        return createOverlay('ion-picker', options);\\n    };\\n    /**\\n     * Dismiss the open picker overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the picker.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the picker.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\\n     */\\n    PickerController.prototype.dismiss = function (data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-picker', id);\\n    };\\n    /**\\n     * Get the most recently opened picker overlay.\\n     */\\n    PickerController.prototype.getTop = function () {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            return tslib_1.__generator(this, function (_a) {\\n                return [2 /*return*/, getOverlay(document, 'ion-picker')];\\n            });\\n        });\\n    };\\n    return PickerController;\\n}());\\nvar PopoverController = /** @class */ (function () {\\n    function PopoverController(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a popover overlay with popover options.\\n     *\\n     * @param options The options to use to create the popover.\\n     */\\n    PopoverController.prototype.create = function (options) {\\n        return createOverlay('ion-popover', options);\\n    };\\n    /**\\n     * Dismiss the open popover overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the popover.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the popover.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\\n     */\\n    PopoverController.prototype.dismiss = function (data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-popover', id);\\n    };\\n    /**\\n     * Get the most recently opened popover overlay.\\n     */\\n    PopoverController.prototype.getTop = function () {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            return tslib_1.__generator(this, function (_a) {\\n                return [2 /*return*/, getOverlay(document, 'ion-popover')];\\n            });\\n        });\\n    };\\n    return PopoverController;\\n}());\\nvar ToastController = /** @class */ (function () {\\n    function ToastController(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a toast overlay with toast options.\\n     *\\n     * @param options The options to use to create the toast.\\n     */\\n    ToastController.prototype.create = function (options) {\\n        return createOverlay('ion-toast', options);\\n    };\\n    /**\\n     * Dismiss the open toast overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\\n     * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\\n     */\\n    ToastController.prototype.dismiss = function (data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-toast', id);\\n    };\\n    /**\\n     * Get the most recently opened toast overlay.\\n     */\\n    ToastController.prototype.getTop = function () {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            return tslib_1.__generator(this, function (_a) {\\n                return [2 /*return*/, getOverlay(document, 'ion-toast')];\\n            });\\n        });\\n    };\\n    return ToastController;\\n}());\\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{H2Ha:function(t,n,o){\"use strict\";o.r(n),o.d(n,\"ion_action_sheet_controller\",function(){return c}),o.d(n,\"ion_alert_controller\",function(){return u}),o.d(n,\"ion_loading_controller\",function(){return p}),o.d(n,\"ion_modal_controller\",function(){return f}),o.d(n,\"ion_picker_controller\",function(){return s}),o.d(n,\"ion_popover_controller\",function(){return d}),o.d(n,\"ion_toast_controller\",function(){return a});var e=o(\"9TBO\"),i=o(\"9t42\"),r=(o(\"9yTv\"),o(\"F6v2\")),c=function(){function t(t){Object(i.m)(this,t)}return t.prototype.create=function(t){return Object(r.h)(\"ion-action-sheet\",t)},t.prototype.dismiss=function(t,n,o){return Object(r.i)(document,t,n,\"ion-action-sheet\",o)},t.prototype.getTop=function(){return e.a(this,void 0,void 0,function(){return e.c(this,function(t){return[2,Object(r.k)(document,\"ion-action-sheet\")]})})},t}(),u=function(){function t(t){Object(i.m)(this,t)}return t.prototype.create=function(t){return Object(r.h)(\"ion-alert\",t)},t.prototype.dismiss=function(t,n,o){return Object(r.i)(document,t,n,\"ion-alert\",o)},t.prototype.getTop=function(){return e.a(this,void 0,void 0,function(){return e.c(this,function(t){return[2,Object(r.k)(document,\"ion-alert\")]})})},t}(),p=function(){function t(t){Object(i.m)(this,t)}return t.prototype.create=function(t){return Object(r.h)(\"ion-loading\",t)},t.prototype.dismiss=function(t,n,o){return Object(r.i)(document,t,n,\"ion-loading\",o)},t.prototype.getTop=function(){return e.a(this,void 0,void 0,function(){return e.c(this,function(t){return[2,Object(r.k)(document,\"ion-loading\")]})})},t}(),f=function(){function t(t){Object(i.m)(this,t)}return t.prototype.create=function(t){return Object(r.h)(\"ion-modal\",t)},t.prototype.dismiss=function(t,n,o){return Object(r.i)(document,t,n,\"ion-modal\",o)},t.prototype.getTop=function(){return e.a(this,void 0,void 0,function(){return e.c(this,function(t){return[2,Object(r.k)(document,\"ion-modal\")]})})},t}(),s=function(){function t(t){Object(i.m)(this,t)}return t.prototype.create=function(t){return Object(r.h)(\"ion-picker\",t)},t.prototype.dismiss=function(t,n,o){return Object(r.i)(document,t,n,\"ion-picker\",o)},t.prototype.getTop=function(){return e.a(this,void 0,void 0,function(){return e.c(this,function(t){return[2,Object(r.k)(document,\"ion-picker\")]})})},t}(),d=function(){function t(t){Object(i.m)(this,t)}return t.prototype.create=function(t){return Object(r.h)(\"ion-popover\",t)},t.prototype.dismiss=function(t,n,o){return Object(r.i)(document,t,n,\"ion-popover\",o)},t.prototype.getTop=function(){return e.a(this,void 0,void 0,function(){return e.c(this,function(t){return[2,Object(r.k)(document,\"ion-popover\")]})})},t}(),a=function(){function t(t){Object(i.m)(this,t)}return t.prototype.create=function(t){return Object(r.h)(\"ion-toast\",t)},t.prototype.dismiss=function(t,n,o){return Object(r.i)(document,t,n,\"ion-toast\",o)},t.prototype.getTop=function(){return e.a(this,void 0,void 0,function(){return e.c(this,function(t){return[2,Object(r.k)(document,\"ion-toast\")]})})},t}()}}]);","extractedComments":[]}