{"version":3,"sources":["webpack:///./src/app/configuracoes/configuracoes.module.ts","webpack:///./src/app/configuracoes/configuracoes.page.html","webpack:///./src/app/configuracoes/configuracoes.page.scss","webpack:///./src/app/configuracoes/configuracoes.page.ts","webpack:///./src/app/configuracoes/labelsConfiguracoes.ts"],"names":[],"mappings":"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","file":"configuracoes-configuracoes-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConfiguracoesPage } from './configuracoes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfiguracoesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ConfiguracoesPage]\n})\nexport class ConfiguracoesPageModule {}\n","module.exports = \"<ion-header class=\\\"fonte\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-thumbnail slot=\\\"end\\\">\\n      <img src=\\\"../assets/images/logobola.png\\\" />\\n    </ion-thumbnail>\\n    <ion-title text-center>{{labels.titulo[idiomaPadrao]}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-item>\\n    <ion-label>{{labels.mudarlingua[idiomaPadrao]}}</ion-label>\\n    <ion-select [(ngModel)]=\\\"idioma\\\" (ionChange)=\\\"mudouIdioma()\\\">\\n      <ion-select-option value=\\\"en\\\">English</ion-select-option>\\n      <ion-select-option value=\\\"ptbr\\\">Português</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZ3VyYWNvZXMvY29uZmlndXJhY29lcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { NomeInstrutorService } from \"../nome-instrutor.service\";\nimport { Storage } from \"@ionic/storage\";\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { LabelsConfiguracao } from './labelsConfiguracoes';\nimport { AppComponent } from '../app.component';\n\n\n@Component({\n  selector: \"app-configuracoes\",\n  templateUrl: \"./configuracoes.page.html\",\n  styleUrls: [\"./configuracoes.page.scss\"]\n})\nexport class ConfiguracoesPage implements OnInit {\n  margemPadrao = \"35%\";\n  margemAtual;\n\n  idioma: string;\n  idiomaPadrao: string;\n\n  constructor(\n    private storage: Storage,\n    private globalization: Globalization,\n    public labels: LabelsConfiguracao,\n    public app: AppComponent,\n    private instrutor: NomeInstrutorService\n    ) {}\n\n  ngOnInit() {}\n\n  checkIdioma(){\n    this.storage.get(\"idioma\").then(res => {\n        \n      this.idiomaPadrao = res;\n    if(res == \"\" || res == null)\n  {\n    this.globalization.getPreferredLanguage().then(res => {\n  if(res.value.includes(\"pt\"))\n  {\n  this.storage.set(\"idioma\",\"ptbr\");\n  this.idiomaPadrao = \"ptbr\";\n  }\n  else if(res.value.includes(\"en\"))\n  {\n  this.storage.set(\"idioma\",\"en\");\n  this.idiomaPadrao = \"en\";\n  }\n  \n    });\n  }\n  });\n  }\n\n  \n\n  ionViewWillEnter() {\nthis.checkIdioma();\n\n\n    this.storage.get(\"idioma\").then(res =>{\n    this.idioma = res;\n    });\n  }\n\n  mudouIdioma(){\nthis.storage.set(\"idioma\",this.idioma);\nthis.app.setIdioma(this.idioma);\nthis.instrutor.idiomaPadrao = this.idioma;\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\r\n\r\nexport class Label{\r\n  ptbr: string;\r\n  en: string;\r\n}\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\n\r\nexport class LabelsConfiguracao {\r\n    \r\n  mudarlingua: Label = new Label();\r\n  titulo: Label = new Label();\r\n\r\nconstructor(){\r\n  this.mudarlingua[\"ptbr\"] = \"Mudar idioma\";\r\n  this.mudarlingua[\"en\"] = \"Change language\";\r\n  this.titulo[\"ptbr\"] = \"Configurações\";\r\n  this.titulo[\"en\"] = \"Settings\";\r\n}\r\n\r\n\r\n}"],"sourceRoot":""}