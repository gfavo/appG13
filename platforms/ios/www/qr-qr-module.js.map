{"version":3,"sources":["webpack:///./node_modules/ngx-qrcode3/index.js","webpack:///./src/app/qr/qr.module.ts","webpack:///./src/app/qr/qr.page.html","webpack:///./src/app/qr/qr.page.scss","webpack:///./src/app/qr/qr.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAClC;;AAE/C,aAAa,mBAAO,CAAC,oDAAQ;AAC7B;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2CAA2C,sEAAsE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kDAAkD,sEAAsE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uEAAuE,gBAAgB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,iDAAiD;AACjD,KAAK,OAAO,uDAAS,GAAG;AACxB,EAAE;AACF;AACA,qBAAqB,OAAO,mDAAK,+BAA+B;AAChE,iBAAiB,OAAO,mDAAK,0BAA0B;AACvD,yBAAyB,OAAO,mDAAK,mCAAmC;AACxE,kBAAkB,OAAO,mDAAK,wBAAwB;AACtD,eAAe,OAAO,mDAAK,wBAAwB;AACnD,oBAAoB,OAAO,uDAAS,yBAAyB;AAC7D;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,sDA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","file":"qr-qr-module.js","sourcesContent":["import { Component, Input, NgModule, Renderer2, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar QRCode = require('qrcode');\nvar NgxQRCodeComponent = (function () {\n    /**\n     * @param {?} renderer\n     */\n    function NgxQRCodeComponent(renderer) {\n        this.renderer = renderer;\n        this.elementType = 'url';\n        this.version = '';\n        this.correctionLevel = 'H';\n        this.cssClass = 'qrcode';\n        this.value = 'Techiediaries';\n    }\n    /**\n     * @return {?}\n     */\n    NgxQRCodeComponent.prototype.ngOnChanges = function () {\n        this.createQRCode();\n    };\n    /**\n     * @return {?}\n     */\n    NgxQRCodeComponent.prototype.toDataURL = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            QRCode.toDataURL(_this.value, { errorCorrectionLevel: _this.correctionLevel, version: _this.version }, function (err, url) {\n                if (err) {\n                    console.error(err);\n                    reject(err);\n                }\n                else {\n                    console.log(url);\n                    resolve(url);\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} canvas\n     * @return {?}\n     */\n    NgxQRCodeComponent.prototype.toCanvas = function (canvas) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            QRCode.toCanvas(canvas, _this.value, { errorCorrectionLevel: _this.correctionLevel, version: _this.version }, function (error) {\n                if (error) {\n                    //console.error(error);\n                    reject(error);\n                }\n                else {\n                    //console.log('success!');\n                    resolve(\"success\");\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    NgxQRCodeComponent.prototype.renderElement = function (element) {\n        for (var _i = 0, _a = this.qrcElement.nativeElement.childNodes; _i < _a.length; _i++) {\n            var node = _a[_i];\n            this.renderer.removeChild(this.qrcElement.nativeElement, node);\n        }\n        this.renderer.appendChild(this.qrcElement.nativeElement, element);\n    };\n    /**\n     * @return {?}\n     */\n    NgxQRCodeComponent.prototype.createQRCode = function () {\n        var _this = this;\n        if (!this.value) {\n            return;\n        }\n        \n        var /** @type {?} */ element;\n        console.log(\"QR Encoding \" + this.value);\n        switch (this.elementType) {\n            case 'canvas':\n                element = this.renderer.createElement('canvas');\n                this.toCanvas(element).then(function (v) {\n                    console.log(v);\n                    _this.renderElement(element);\n                }).catch(function (e) {\n                    console.error(e);\n                });\n                break;\n            case 'url':\n            case 'img':\n            default:\n                element = this.renderer.createElement('img');\n                this.toDataURL().then(function (v) {\n                    console.log(v);\n                    element.setAttribute(\"src\", v);\n                    _this.renderElement(element);\n                }).catch(function (e) {\n                    console.error(e);\n                });\n        }\n    };\n    return NgxQRCodeComponent;\n}());\nNgxQRCodeComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngx-qrcode',\n                template: \"<div #qrcElement [class]=\\\"cssClass\\\"></div>\",\n                styles: []\n            },] },\n];\n/**\n * @nocollapse\n */\nNgxQRCodeComponent.ctorParameters = function () { return [\n    { type: Renderer2, },\n]; };\nNgxQRCodeComponent.propDecorators = {\n    'elementType': [{ type: Input, args: ['qrc-element-type',] },],\n    'version': [{ type: Input, args: ['qrc-version',] },],\n    'correctionLevel': [{ type: Input, args: ['qrc-correction-level',] },],\n    'cssClass': [{ type: Input, args: ['qrc-class',] },],\n    'value': [{ type: Input, args: ['qrc-value',] },],\n    'qrcElement': [{ type: ViewChild, args: ['qrcElement',] },],\n};\n\nvar NgxQRCodeModule = (function () {\n    function NgxQRCodeModule() {\n    }\n    /**\n     * @return {?}\n     */\n    NgxQRCodeModule.forRoot = function () {\n        return {\n            ngModule: NgxQRCodeModule,\n            providers: []\n        };\n    };\n    return NgxQRCodeModule;\n}());\nNgxQRCodeModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NgxQRCodeComponent,\n                ],\n                exports: [\n                    NgxQRCodeComponent,\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nNgxQRCodeModule.ctorParameters = function () { return []; };\n\nexport { NgxQRCodeModule, NgxQRCodeComponent };\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QrPage } from './qr.page';\n\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { NgxQRCodeModule} from 'ngx-qrcode3';\nimport { ModaldetalhesPage } from '../modaldetalhes/modaldetalhes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QrPage\n  }\n];\n\n@NgModule({\n  imports: [\n    NgxQRCodeModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [QrPage],\n  providers: [BarcodeScanner],\n})\nexport class QrPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-thumbnail slot=\\\"end\\\">\\n      <img src=\\\"../assets/images/logobola.png\\\" />\\n    </ion-thumbnail>\\n    <ion-title style=\\\"font-size: medium\\\" text-center\\n      >Scan do codigo Qr</ion-title\\n    >\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"backPage()\\\">\\n      <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n  <ion-grid class=\\\"centro\\\">\\n    <ion-button\\n      color=\\\"dark\\\"\\n      class=\\\"botao\\\"\\n      size=\\\"large\\\"\\n      expand=\\\"block\\\"\\n      (click)=\\\"scanCode()\\\"\\n      ><ion-icon slot=\\\"end\\\" name=\\\"qr-scanner\\\"></ion-icon>Escanear\\n      Codigo</ion-button\\n    >\\n  </ion-grid>\\n\\n  <ion-card *ngIf=\\\"scannedCode\\\">\\n    <ion-card-content>\\n      Result From Scan: {{ aluno_cobaia.nome }} Presente:\\n      {{ aluno_cobaia.presenca }}\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ng-container *ngIf=\\\"instrutor.getIdPrograma()\\\">\\n    <ion-label>\\n      <h2>Descrição da aula:</h2>\\n      <h3>\\n        <b>{{ instrutor.getDescricao() }}</b>\\n      </h3>\\n    </ion-label>\\n    <br />\\n    <h2>\\n      <b>\\n        <ion-label>{{ instrutor.getAulaSelecionada().titulo }}</ion-label>\\n      </b>\\n    </h2>\\n\\n    <ul *ngFor=\\\"let _tecnica of instrutor.getAulaSelecionada().tecnicas\\\">\\n      <li>{{ _tecnica.nome }}</li>\\n    </ul>\\n  </ng-container>\\n</ion-content>\\n\"","module.exports = \".centro {\\n  margin-top: 20%;\\n  vertical-align: middle;\\n  text-align: center; }\\n\\n.botao {\\n  margin-top: 40px;\\n  height: 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXIvQzpcXFVzZXJzXFxHYWJyaWVsXFxEZXNrdG9wXFxwcm9qZXRvc1xcdG96aVxcdG96aV9tb2JpbGUvc3JjXFxhcHBcXHFyXFxxci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFlO0VBRWYsc0JBQXNCO0VBQ3RCLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGdCQUFnQjtFQUNoQixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9xci9xci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudHJvIHtcbiAgICBtYXJnaW4tdG9wOiAyMCU7XG4gICAgXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuYm90YW97XG4gICAgbWFyZ2luLXRvcDogNDBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG59XG4iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { BarcodeScanner } from \"@ionic-native/barcode-scanner/ngx\";\nimport { Router } from \"@angular/router\";\nimport { HttpHeaders, HttpClient, HttpResponse, HttpResponseBase, HttpErrorResponse } from \"@angular/common/http\";\nimport { NomeInstrutorService, error } from \"../nome-instrutor.service\";\nimport { aula, Alunos } from \"../manutencao-aula/manutencao-aula.page\";\nimport { AlertController } from \"@ionic/angular\";\n\nclass sucesso{\n  success: string;\n}\n\n\n@Component({\n  selector: \"app-qr\",\n  templateUrl: \"./qr.page.html\",\n  styleUrls: [\"./qr.page.scss\"]\n})\nexport class QrPage implements OnInit {\n  scannedCode = null;\n\n  aluno_cobaia: Alunos;\n\n  codigo: string = \"\";\n\n  codigoAluno: string;\n\n  teste_nome: string = \"\";\n  \n\n  headers = new HttpHeaders({\n    \"x-version\": \"1.0.9\",\n    \"x-auth\": this.instrutor.getToken(),\n    \"Cache-Control\":\n      \"no-cache, no-store, must-revalidate, post-check=0, pre-check=0\",\n    Pragma: \"no-cache\",\n    Expires: \"0\"\n  });\n\n  aula: aula;\n\n\n  situacao: string = \"\";\n\n  async alertaSimples(mensagem) {\n    const alert = await this.alertController.create({\n      header: \"Atenção\",\n      message: mensagem,\n      buttons: [\"OK\"]\n    });\n    await alert.present();\n  }\n\n \n\n  constructor(\n    private alertController: AlertController,\n    public instrutor: NomeInstrutorService,\n    private barCode: BarcodeScanner,\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    this.http\n      .get(this.instrutor.getUrl() + \"/alunos.php\", { headers: this.headers })\n      .subscribe(data => {\n        console.log(data);\n        this.aula = <aula>data;\n      });\n  }\n\n  scanCode() {\n\n      this.instrutor.setAulaAberta(true);    \n    this.barCode.scan().then(data => {\n      this.scannedCode = data.text;\n   \n\n          this.http\n            .post(this.instrutor.getUrl() + \"/qrcode.php\",{\"alunoid\": parseInt(this.scannedCode)} , {\n              responseType: \"json\", \n               observe: \"response\",\n              withCredentials: true,\n              headers: this.headers\n            })\n            .subscribe(response => {\n              console.log(response);\nthis.alertaSimples((<sucesso>response.body).success);\n              }\n           ,error => {\n           this.alertaSimples((<error>(<HttpErrorResponse>error).error).error);\n            });\n            \n         \n      \n    });\n  }\n\n\n\n  backPage() {\n    this.router.navigateByUrl(\"/aula\");\n  }\n}\n"],"sourceRoot":""}