{"version":3,"sources":["webpack:///./src/app/checkins/checkins.module.ts","webpack:///./src/app/checkins/checkins.page.html","webpack:///./src/app/checkins/checkins.page.scss","webpack:///./src/app/checkins/checkins.page.ts","webpack:///./src/app/checkins/labelsCheckins.ts"],"names":[],"mappings":"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","file":"checkins-checkins-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckinsPage } from './checkins.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckinsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CheckinsPage]\n})\nexport class CheckinsPageModule {}\n","module.exports = \"<ion-header class=\\\"fonte\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-thumbnail slot=\\\"end\\\">\\n      <img src=\\\"../assets/images/logobola.png\\\" />\\n    </ion-thumbnail>\\n    <ion-title text-center>{{labels.titulo[idiomaPadrao]}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list *ngFor=\\\"let aluno of conteudo\\\">\\n    <ion-item>\\n      <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"aluno.confirmado\\\"></ion-checkbox>\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2>{{labels.confirmapresenca[idiomaPadrao]}} {{ aluno.nome }}?</h2>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer class=\\\"ion-padding\\\">\\n  <ion-toolbar>\\n    <ion-grid>\\n      <ion-row no-padding no-margin>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button expand=\\\"block\\\" (click)=\\\"voltar()\\\"\\n            ><ion-icon slot=\\\"start\\\" name=\\\"arrow-back\\\"></ion-icon>\\n            {{labels.voltar[idiomaPadrao]}}</ion-button\\n          >\\n        </ion-col>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button expand=\\\"block\\\" (click)=\\\"checkall()\\\" class=\\\"ion-text-wrap\\\"\\n            >{{labels.checktodos[idiomaPadrao]}}!</ion-button\\n          >\\n        </ion-col>\\n        <ion-col size=\\\"4\\\">\\n          <ion-button expand=\\\"block\\\" (click)=\\\"confirmar()\\\"\\n            >{{labels.confirma[idiomaPadrao]}}!</ion-button\\n          >\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoZWNraW5zL2NoZWNraW5zLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { NomeInstrutorService } from \"../nome-instrutor.service\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { LabelsCheckins } from './labelsCheckins';\nimport { Storage } from '@ionic/storage';\nclass conteudoCheck {\n  aulaid: number;\n  confirmado: number;\n  datahorasolicitacao: string;\n  id: number;\n  idAluno: number;\n  nome: string;\n}\n\n@Component({\n  selector: \"app-checkins\",\n  templateUrl: \"./checkins.page.html\",\n  styleUrls: [\"./checkins.page.scss\"]\n})\nexport class CheckinsPage implements OnInit {\n  subscription;\n  conteudo: conteudoCheck[];\n  headers = new HttpHeaders({\n    \"x-version\": \"1.1.1\",\n    \"x-auth\": this.instrutor.getToken(),\n    \"Cache-Control\":\n      \"no-cache, no-store, must-revalidate, post-check=0, pre-check=0\",\n    Pragma: \"no-cache\",\n    Expires: \"0\"\n  });\n  idiomaPadrao: string;\n\n  constructor(\n    private instrutor: NomeInstrutorService,\n    private httpClient: HttpClient,\n    private router: Router,\n    private storage: Storage,\n    private globalization: Globalization,\n    public labels: LabelsCheckins\n  ) {}\n\n  ngOnInit() {}\n\n  checkIdioma(){\n    this.storage.get(\"idioma\").then(res => {\n        \n      this.idiomaPadrao = res;\n    if(res == \"\" || res == null)\n  {\n    this.globalization.getPreferredLanguage().then(res => {\n  if(res.value.includes(\"pt\"))\n  {\n  this.storage.set(\"idioma\",\"ptbr\");\n  this.idiomaPadrao = \"ptbr\";\n  }\n  else if(res.value.includes(\"en\"))\n  {\n  this.storage.set(\"idioma\",\"en\");\n  this.idiomaPadrao = \"en\";\n  }\n  \n    });\n  }\n  });\n  }\n\n\n  ionViewWillEnter() {\n\n    this.checkIdioma();\n    this.subscription = this.httpClient\n      .get(this.instrutor.getUrl() + \"/checkins.php\", {\n        responseType: \"json\",\n        headers: this.headers\n      })\n      .subscribe(data => {\n        this.conteudo = <conteudoCheck[]>data;\n        console.log(JSON.stringify(this.conteudo));\n      });\n  }\n\n  confirmar() {\n    this.subscription = this.httpClient\n      .post(this.instrutor.getUrl() + \"/confirma.php\", this.conteudo, {\n        responseType: \"json\",\n        headers: this.headers\n      })\n      .subscribe(data => {\n        console.log(data);\n        this.router.navigateByUrl(\"/aula\");\n      });\n  }\n\n  voltar() {\n    this.router.navigateByUrl(\"/aula\");\n  }\n\n  checkall() {\n    this.conteudo.forEach(element => {\n      element.confirmado = 1;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nexport class Label{\r\n  ptbr: string;\r\n  en: string;\r\n}\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\n\r\nexport class LabelsCheckins {\r\n\r\n\r\n  titulo: Label = new Label();\r\n  confirmapresenca: Label = new Label();\r\n  voltar: Label = new Label();\r\n  checktodos: Label = new Label();\r\n  confirma: Label = new Label();\r\n\r\nconstructor(){\r\n  this.titulo[\"ptbr\"] = \"Checkins\";\r\n  this.titulo[\"en\"] = \"Checkins\";\r\n  this.confirmapresenca[\"ptbr\"] = \"Confirmar presença para\";\r\n  this.confirmapresenca[\"en\"] = \"Confirm presençe for\";\r\n  this.voltar[\"ptbr\"] = \"Voltar\"; \r\n  this.voltar[\"en\"] = \"Back\";\r\n  this.checktodos[\"ptbr\"] = \"Checar todos\";\r\n  this.checktodos[\"en\"] = \"Check all\";\r\n  this.confirma[\"ptbr\"] = \"Confirmar\";\r\n  this.confirma[\"en\"] =  \"Confirm\";\r\n\r\n}\r\n\r\n\r\n}"],"sourceRoot":""}