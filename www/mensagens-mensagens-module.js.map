{"version":3,"sources":["webpack:///./src/app/mensagens/labelsMensagens.ts","webpack:///./src/app/mensagens/mensagens.module.ts","webpack:///./src/app/mensagens/mensagens.page.html","webpack:///./src/app/mensagens/mensagens.page.scss","webpack:///./src/app/mensagens/mensagens.page.ts"],"names":[],"mappings":"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","file":"mensagens-mensagens-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nexport class Label{\r\n  ptbr: string;\r\n  en: string;\r\n}\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\n\r\nexport class LabelsMensagens {\r\n    \r\n \r\n  titulo: Label = new Label();\r\n\r\nconstructor(){\r\n  this.titulo[\"ptbr\"] = \"Mensagens\";\r\n  this.titulo[\"en\"] = \"Messages\";\r\n}\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MensagensPage } from './mensagens.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MensagensPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MensagensPage]\n})\nexport class MensagensPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-thumbnail slot=\\\"end\\\">\\n      <img src=\\\"../assets/images/logobola.png\\\" />\\n    </ion-thumbnail>\\n    <ion-title style=\\\"font-size: small\\\" text-center>{{labels.titulo[idiomaPadrao]}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list *ngFor=\\\"let mensagem of mensagens\\\">\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-subtitle>{{ mensagem.datahora }}</ion-card-subtitle>\\n        <ion-card-title>{{ mensagem.assunto }}</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        {{ mensagem.mensagem }}\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnNhZ2Vucy9tZW5zYWdlbnMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { NomeInstrutorService } from \"../nome-instrutor.service\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\nimport { Storage } from \"@ionic/storage\";\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { LabelsMensagens } from './labelsMensagens';\n\nclass mensagem {\n  assunto: string;\n  datahora: string;\n  mensagem: string;\n}\n\n@Component({\n  selector: \"app-mensagens\",\n  templateUrl: \"./mensagens.page.html\",\n  styleUrls: [\"./mensagens.page.scss\"]\n})\nexport class MensagensPage implements OnInit {\n  mensagens: mensagem[];\n  headers = new HttpHeaders({\n    \"x-version\": \"1.1.1\",\n    \"x-auth\": this.instrutor.getToken(),\n    \"Cache-Control\":\n      \"no-cache, no-store, must-revalidate, post-check=0, pre-check=0\",\n    Pragma: \"no-cache\",\n    Expires: \"0\"\n  });\nidiomaPadrao: string;\n\n  constructor(\n    private instrutor: NomeInstrutorService,\n    private httpClient: HttpClient,\n    private storage: Storage,\n    private globalization: Globalization,\n    public labels: LabelsMensagens\n  ) {}\n\n  ngOnInit() {}\n\n\n  checkIdioma(){\n    this.storage.get(\"idioma\").then(res => {\n        \n      this.idiomaPadrao = res;\n    if(res == \"\" || res == null)\n  {\n    this.globalization.getPreferredLanguage().then(res => {\n  if(res.value.includes(\"pt\"))\n  {\n  this.storage.set(\"idioma\",\"ptbr\");\n  this.idiomaPadrao = \"ptbr\";\n  }\n  else if(res.value.includes(\"en\"))\n  {\n  this.storage.set(\"idioma\",\"en\");\n  this.idiomaPadrao = \"en\";\n  }\n  \n    });\n  }\n  });\n  }\n\n\n  ionViewWillEnter() {\nthis.checkIdioma();\n\n    this.httpClient\n      .get(this.instrutor.getUrl() + \"/mensagens.php\", {\n        headers: this.headers\n      })\n      .subscribe(data => {\n        console.log(data);\n        this.mensagens = <mensagem[]>data;\n      });\n  }\n}\n"],"sourceRoot":""}